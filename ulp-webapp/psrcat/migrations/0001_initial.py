# Generated by Django 5.0.2 on 2024-06-27 07:02

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ancillary',
            fields=[
                ('ancillary_id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ancillary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Association',
            fields=[
                ('association_id', models.AutoField(primary_key=True, serialize=False)),
                ('confidence', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'association',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Associationtype',
            fields=[
                ('associationtype_id', models.AutoField(db_column='associationType_id', primary_key=True, serialize=False)),
                ('label', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
            ],
            options={
                'db_table': 'associationType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Binarytype',
            fields=[
                ('binarytype_id', models.AutoField(db_column='binaryType_id', primary_key=True, serialize=False)),
                ('confidence', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'binaryType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Binarytypeoptions',
            fields=[
                ('binarytypeoptions_id', models.AutoField(db_column='binaryTypeOptions_id', primary_key=True, serialize=False)),
                ('label', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
            ],
            options={
                'db_table': 'binaryTypeOptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Citation',
            fields=[
                ('citation_id', models.AutoField(primary_key=True, serialize=False)),
                ('v1label', models.TextField(blank=True, null=True)),
                ('label', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('author', models.TextField(blank=True, null=True)),
                ('journal', models.TextField(blank=True, null=True)),
                ('year', models.TextField(blank=True, null=True)),
                ('month', models.TextField(blank=True, null=True)),
                ('volume', models.TextField(blank=True, null=True)),
                ('number', models.TextField(blank=True, null=True)),
                ('pages', models.TextField(blank=True, null=True)),
                ('doi', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'citation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Derived',
            fields=[
                ('derived_id', models.AutoField(primary_key=True, serialize=False)),
                ('method', models.TextField(blank=True, null=True)),
                ('methodversion', models.TextField(blank=True, db_column='methodVersion', null=True)),
            ],
            options={
                'db_table': 'derived',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Derivedfromparameter',
            fields=[
                ('derivedfromparameter_id', models.AutoField(db_column='derivedFromParameter_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'derivedFromParameter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance',
            fields=[
                ('distance_id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('uncertainty', models.TextField(blank=True, null=True)),
                ('label', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'distance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fitparameters',
            fields=[
                ('fitparameters_id', models.AutoField(db_column='fitParameters_id', primary_key=True, serialize=False)),
                ('units', models.TextField(blank=True, null=True)),
                ('ephemeris', models.TextField(blank=True, null=True)),
                ('clock', models.TextField(blank=True, null=True)),
                ('citation_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fitParameters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Linkedset',
            fields=[
                ('linkedset_id', models.AutoField(db_column='linkedSet_id', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'linkedSet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Name',
            fields=[
                ('name_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
            ],
            options={
                'db_table': 'name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Observingsystem',
            fields=[
                ('observingsystem_id', models.AutoField(db_column='observingSystem_id', primary_key=True, serialize=False)),
                ('systemlabel', models.TextField(blank=True, db_column='systemLabel', null=True)),
                ('centralfrequency', models.FloatField(blank=True, db_column='centralFrequency', null=True)),
                ('bandwidth', models.FloatField(blank=True, null=True)),
                ('telescope', models.TextField(blank=True, null=True)),
                ('approximate', models.IntegerField(blank=True, null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
            ],
            options={
                'db_table': 'observingSystem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('parameter_id', models.AutoField(primary_key=True, serialize=False)),
                ('timederivative', models.IntegerField(blank=True, db_column='timeDerivative', null=True)),
                ('companionnumber', models.IntegerField(blank=True, db_column='companionNumber', null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('uncertainty', models.TextField(blank=True, null=True)),
                ('referencetime', models.TextField(blank=True, db_column='referenceTime', null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
            ],
            options={
                'db_table': 'parameter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parametertype',
            fields=[
                ('parametertype_id', models.AutoField(db_column='parameterType_id', primary_key=True, serialize=False)),
                ('label', models.TextField(blank=True, null=True)),
                ('unit', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('timingflag', models.IntegerField(blank=True, db_column='timingFlag', null=True)),
                ('datatype', models.TextField(blank=True, db_column='dataType', null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
            ],
            options={
                'db_table': 'parameterType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pulsar',
            fields=[
                ('pulsar_id', models.AutoField(primary_key=True, serialize=False)),
                ('jname', models.TextField(blank=True, null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
            ],
            options={
                'db_table': 'pulsar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sourcetype',
            fields=[
                ('sourcetype_id', models.AutoField(db_column='sourceType_id', primary_key=True, serialize=False)),
                ('confidence', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sourceType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sourcetypeoptions',
            fields=[
                ('sourcetypeoptions_id', models.AutoField(db_column='sourceTypeOptions_id', primary_key=True, serialize=False)),
                ('label', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
            ],
            options={
                'db_table': 'sourceTypeOptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('survey_id', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.TextField(blank=True, null=True)),
                ('shortlabel', models.TextField(blank=True, db_column='shortLabel', null=True)),
                ('telescope', models.TextField(blank=True, null=True)),
                ('receiver', models.TextField(blank=True, null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
            ],
            options={
                'db_table': 'survey',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Surveytopulsar',
            fields=[
                ('surveytopulsar_id', models.AutoField(db_column='surveyToPulsar_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'surveyToPulsar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('taglabel', models.TextField(blank=True, db_column='tagLabel', null=True)),
                ('tagstring', models.TextField(blank=True, db_column='tagString', null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
            ],
            options={
                'db_table': 'tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagtocitation',
            fields=[
                ('tagtocitation_id', models.AutoField(db_column='tagToCitation_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'tagToCitation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagtolinkedset',
            fields=[
                ('tagtolinkedset_id', models.AutoField(db_column='tagToLinkedSet_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'tagToLinkedSet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagtopulsar',
            fields=[
                ('tagtopulsar_id', models.AutoField(db_column='tagToPulsar_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'tagToPulsar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('version_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.TextField(blank=True, null=True)),
                ('entrydate', models.TextField(blank=True, db_column='entryDate', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'version',
                'managed': False,
            },
        ),
    ]
