# Generated by Django 5.0.8 on 2024-10-03 05:14

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0029_workingephemeris_peak_value_jy_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='workingephemeris',
            name='peak_value_Jy',
        ),
        migrations.RemoveField(
            model_name='workingephemeris',
            name='peak_value_MJD',
        ),
        migrations.AddField(
            model_name='pulse',
            name='peak_value_Jy',
            field=models.FloatField(blank=True, help_text="The flux density (Jy) of the brightest point in the lightcurve within the range defined by this pulse. This field is not intended to be directly editable by the user, but is to be automatically updated whenever the pulse bounds change. It serves to save recalculating this value everytime it's needed (e.g. for a plot).", null=True),
        ),
        migrations.AddField(
            model_name='pulse',
            name='peak_value_MJD',
            field=models.FloatField(blank=True, help_text="The ToA (topocentric MJD) of the brightest point in the lightcurve within the range defined by this pulse. This field is not intended to be directly editable by the user, but is to be automatically updated whenever the pulse bounds change. It serves to save recalculating this value everytime it's needed (e.g. for a plot).", null=True),
        ),
        migrations.AddField(
            model_name='workingephemeris',
            name='siA',
            field=models.FloatField(blank=True, help_text="The 'A' in the equation ln(S) = A*ln(f)^2 + B*ln(f) + C, where f is the frequency in GHz and S is in Jy", null=True),
        ),
        migrations.AddField(
            model_name='workingephemeris',
            name='siB',
            field=models.FloatField(blank=True, help_text="The 'B' in the equation ln(S) = A*ln(f)^2 + B*ln(f) + C, where f is the frequency in GHz and S is in Jy", null=True),
        ),
        migrations.AddField(
            model_name='workingephemeris',
            name='siC',
            field=models.FloatField(blank=True, help_text="The 'C' in the equation ln(S) = A*ln(f)^2 + B*ln(f) + C, where f is the frequency in GHz and S is in Jy", null=True),
        ),
    ]
