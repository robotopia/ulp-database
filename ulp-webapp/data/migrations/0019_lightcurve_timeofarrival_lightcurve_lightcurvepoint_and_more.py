# Generated by Django 5.0.8 on 2024-09-28 11:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("data", "0018_remove_timeofarrival_backend_and_more"),
        ("published", "0003_ulp_whitelist_users"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Lightcurve",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "freq",
                    models.FloatField(
                        help_text="The centre frequency of this lightcurve, in MHz.",
                        verbose_name="Frequency (MHz)",
                    ),
                ),
                (
                    "bw",
                    models.FloatField(
                        help_text="The bandwidth of this lightcurve, in MHz.",
                        verbose_name="Bandwidth (MHz)",
                    ),
                ),
                (
                    "pol",
                    models.CharField(
                        choices=[
                            ("I", "Stokes I"),
                            ("Q", "Stokes Q"),
                            ("U", "Stokes U"),
                            ("V", "Stokes V"),
                        ],
                        default="I",
                        max_length=1,
                    ),
                ),
                (
                    "t0",
                    models.FloatField(
                        help_text="Time of first sample (MJD)",
                        verbose_name="Start time (MJD)",
                    ),
                ),
                (
                    "dt",
                    models.FloatField(
                        help_text="Duration of each time bin (s)",
                        verbose_name="Time bin duration (s)",
                    ),
                ),
                (
                    "dm",
                    models.FloatField(
                        default=0.0,
                        help_text="The dispersion measure used to make this lightcurve, in pc/cm^3.",
                        verbose_name="DM (pc/cm^3)",
                    ),
                ),
                (
                    "can_edit_groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Groups that are granted edit privileges. All groups with edit privileges can also view.",
                        related_name="%(app_label)s_%(class)s_as_editor",
                        to="auth.group",
                    ),
                ),
                (
                    "can_edit_users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Users that are granted edit privileges. All users with edit privileges can also view.",
                        related_name="%(app_label)s_%(class)s_as_editor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "can_view_groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Groups that are granted view privileges.",
                        related_name="%(app_label)s_%(class)s_as_viewer",
                        to="auth.group",
                    ),
                ),
                (
                    "can_view_users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Users that are granted view privileges.",
                        related_name="%(app_label)s_%(class)s_as_viewer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The owner of this instance.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_as_owner",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ulp",
                    models.ForeignKey(
                        help_text="The source being observed.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lightcurves",
                        to="published.ulp",
                    ),
                ),
            ],
            options={
                "ordering": ["ulp", "t0"],
            },
        ),
        migrations.AddField(
            model_name="timeofarrival",
            name="lightcurve",
            field=models.ForeignKey(
                blank=True,
                help_text="The lightcurve from which this ToA was derived.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="toas",
                to="data.lightcurve",
            ),
        ),
        migrations.CreateModel(
            name="LightcurvePoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sample_number", models.IntegerField()),
                (
                    "value",
                    models.FloatField(help_text="The value of this point, in Jy."),
                ),
                (
                    "err",
                    models.FloatField(
                        blank=True,
                        help_text="The uncertainty of this point, in Jy.",
                        null=True,
                    ),
                ),
                (
                    "lightcurve",
                    models.ForeignKey(
                        help_text="The lightcurve to which this point belongs.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="points",
                        to="data.lightcurve",
                    ),
                ),
            ],
            options={
                "ordering": ["lightcurve", "sample_number"],
            },
        ),
        migrations.AddConstraint(
            model_name="lightcurvepoint",
            constraint=models.UniqueConstraint(
                fields=("lightcurve", "sample_number"), name="unique_lightcurve_samples"
            ),
        ),
    ]
